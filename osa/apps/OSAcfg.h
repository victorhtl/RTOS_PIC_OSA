/******************************************************************************/
//
// This file was generated by OSAcfg_Tool utility.
// Do not modify it to prevent data loss on next editing.
//
// PROJECT NAME: LEDS
//
// PLATFORM:     mikroC for PIC18
//
/******************************************************************************/


#ifndef _OSACFG_H
#define _OSACFG_H

//------------------------------------------------------------------------------
// SYSTEM
//------------------------------------------------------------------------------

#define OS_TASKS                4   // Number of tasks that can be active at one time
#define OS_PRIORITY_LEVEL  OS_PRIORITY_NORMAL 

//------------------------------------------------------------------------------
// ENABLE CONSTANTS
//------------------------------------------------------------------------------

#define OS_ENABLE_QUEUE             // Enable queues of pointers to messages
#define OS_ENABLE_TTIMERS           // Enable task timers (OS_Delay and OS_xxx_Wait_TO)
#define OS_USE_INLINE_TIMER         // Make OS_Timer service as in-line function
#define OS_STIMERS_ENABLE_ALLOCATION// Allow to assign static timers ID in run-time
#define OS_STIMERS_OPTIMIZE_SIZE    // Optimize OS_Timer code for static timers by size
#define OS_TTIMERS_OPTIMIZE_SIZE    // Optimize OS_Timer code for task timers by size


//------------------------------------------------------------------------------
// INTERRUPT SERVICES
//------------------------------------------------------------------------------

#define OS_ENABLE_INT_QUEUE        // Enable services for work with queues within interrupts
#define OS_ENABLE_INT_MSG          // Enable services for work with pointers to messages within interrupts


//------------------------------------------------------------------------------
// TYPES
//------------------------------------------------------------------------------

#define OS_TIMER_SIZE           4   // Size of all system timers (1, 2 or 4)
#define OS_TTIMER_SIZE          4   // Size of task timers (1, 2 or 4)
#define OS_DTIMER_SIZE          4   // Size of dynamic timers (1, 2 or 4)
#define OS_STIMER_SIZE          4   // Size of static timers (1, 2 or 4)


#define OS_MSG_TYPE            char *
//------------------------------------------------------------------------------
// STIMERS
//------------------------------------------------------------------------------

#define OS_STIMERS              2   // Number of static timers

enum OSA_STIMERS_ENUM
{
    stimer1,
    stimer2 
};


//------------------------------------------------------------------------------
// BSEMS
//------------------------------------------------------------------------------

#define OS_BSEMS                3   // Number of binary semaphores

enum OSA_BSEMS_ENUM
{
    BS_LED0,
    BS_LED1,
    BS_LED2 
};




#endif
